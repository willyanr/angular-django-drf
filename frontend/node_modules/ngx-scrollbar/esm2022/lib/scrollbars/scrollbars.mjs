import { Component, inject, ChangeDetectionStrategy, ViewChild } from '@angular/core';
import { ScrollbarX, ScrollbarY } from '../scrollbar/scrollbar';
import { NG_SCROLLBAR } from '../utils/scrollbar-base';
import * as i0 from "@angular/core";
export class Scrollbars {
    constructor() {
        this.cmp = inject(NG_SCROLLBAR);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: Scrollbars, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.1", type: Scrollbars, isStandalone: true, selector: "scrollbars", viewQueries: [{ propertyName: "y", first: true, predicate: ScrollbarY, descendants: true }, { propertyName: "x", first: true, predicate: ScrollbarX, descendants: true }], ngImport: i0, template: `
    @if (cmp.verticalUsed()) {
      <scrollbar-y/>
    }
    @if (cmp.horizontalUsed()) {
      <scrollbar-x/>
    }
  `, isInline: true, styles: [":host{display:contents}\n"], dependencies: [{ kind: "component", type: ScrollbarX, selector: "scrollbar-x" }, { kind: "component", type: ScrollbarY, selector: "scrollbar-y" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.1", ngImport: i0, type: Scrollbars, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'scrollbars', changeDetection: ChangeDetectionStrategy.OnPush, imports: [ScrollbarX, ScrollbarY], template: `
    @if (cmp.verticalUsed()) {
      <scrollbar-y/>
    }
    @if (cmp.horizontalUsed()) {
      <scrollbar-x/>
    }
  `, styles: [":host{display:contents}\n"] }]
        }], propDecorators: { y: [{
                type: ViewChild,
                args: [ScrollbarY]
            }], x: [{
                type: ViewChild,
                args: [ScrollbarX]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsYmFycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1zY3JvbGxiYXIvc3JjL2xpYi9zY3JvbGxiYXJzL3Njcm9sbGJhcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDaEUsT0FBTyxFQUFFLFlBQVksRUFBZ0IsTUFBTSx5QkFBeUIsQ0FBQzs7QUFxQnJFLE1BQU0sT0FBTyxVQUFVO0lBbkJ2QjtRQXdCRSxRQUFHLEdBQWlCLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztLQUMxQzs4R0FOWSxVQUFVO2tHQUFWLFVBQVUseUdBRVYsVUFBVSxvRUFDVixVQUFVLGdEQWpCWDs7Ozs7OztHQU9ULG1HQVJTLFVBQVUsd0RBQUUsVUFBVTs7MkZBZXJCLFVBQVU7a0JBbkJ0QixTQUFTO2lDQUNJLElBQUksWUFDTixZQUFZLG1CQUNMLHVCQUF1QixDQUFDLE1BQU0sV0FDdEMsQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDLFlBQ3ZCOzs7Ozs7O0dBT1Q7OEJBU3NCLENBQUM7c0JBQXZCLFNBQVM7dUJBQUMsVUFBVTtnQkFDRSxDQUFDO3NCQUF2QixTQUFTO3VCQUFDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGluamVjdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTY3JvbGxiYXJYLCBTY3JvbGxiYXJZIH0gZnJvbSAnLi4vc2Nyb2xsYmFyL3Njcm9sbGJhcic7XHJcbmltcG9ydCB7IE5HX1NDUk9MTEJBUiwgX05nU2Nyb2xsYmFyIH0gZnJvbSAnLi4vdXRpbHMvc2Nyb2xsYmFyLWJhc2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBzZWxlY3RvcjogJ3Njcm9sbGJhcnMnLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG4gIGltcG9ydHM6IFtTY3JvbGxiYXJYLCBTY3JvbGxiYXJZXSxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgQGlmIChjbXAudmVydGljYWxVc2VkKCkpIHtcclxuICAgICAgPHNjcm9sbGJhci15Lz5cclxuICAgIH1cclxuICAgIEBpZiAoY21wLmhvcml6b250YWxVc2VkKCkpIHtcclxuICAgICAgPHNjcm9sbGJhci14Lz5cclxuICAgIH1cclxuICBgLFxyXG4gIHN0eWxlczogW2BcclxuICAgIDpob3N0IHtcclxuICAgICAgZGlzcGxheTogY29udGVudHM7XHJcbiAgICB9XHJcbiAgYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFNjcm9sbGJhcnMge1xyXG4gIC8vIFNjcm9sbGJhcnMgcmVmZXJlbmNlcyB1c2VkIGZvciB0ZXN0aW5nIHB1cnBvc2VzXHJcbiAgQFZpZXdDaGlsZChTY3JvbGxiYXJZKSB5OiBTY3JvbGxiYXJZO1xyXG4gIEBWaWV3Q2hpbGQoU2Nyb2xsYmFyWCkgeDogU2Nyb2xsYmFyWDtcclxuXHJcbiAgY21wOiBfTmdTY3JvbGxiYXIgPSBpbmplY3QoTkdfU0NST0xMQkFSKTtcclxufVxyXG4iXX0=