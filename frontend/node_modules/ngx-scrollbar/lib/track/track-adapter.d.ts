import { Observable } from 'rxjs';
import { _NgScrollbar } from '../utils/scrollbar-base';
import * as i0 from "@angular/core";
export declare abstract class TrackAdapter {
    readonly nativeElement: HTMLElement;
    protected readonly cmp: _NgScrollbar;
    protected readonly document: Document;
    /** Resize observer subscription */
    private sizeChangeSub;
    protected abstract get viewportScrollSize(): number;
    protected abstract get viewportViewportSize(): number;
    protected abstract get viewportScrollOffset(): number;
    private currMousePosition;
    private scrollDirection;
    private thumb;
    get dragged(): Observable<any>;
    abstract readonly cssLengthProperty: string;
    abstract readonly clientProperty: string;
    abstract get size(): number;
    abstract get offset(): number;
    get clientRect(): DOMRect;
    private getScrollDirection;
    constructor();
    private updateCSSVariables;
    /**
     * Scrolls to position when mouse is down the on the track the first time
     */
    onTrackFirstClick(e: PointerEvent): Observable<boolean>;
    /**
     * Callback that is called when mouse is still down on the track
     */
    onTrackOngoingMousedown(): Observable<boolean>;
    private getRelativePosition;
    protected abstract scrollTo(position: number): Observable<void>;
    static ɵfac: i0.ɵɵFactoryDeclaration<TrackAdapter, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TrackAdapter, never, never, {}, {}, ["thumb"], never, false, never>;
}
