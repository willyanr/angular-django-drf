import { OnInit, OnDestroy, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
type ReachedEventAction = {
    emit: () => void;
};
export declare class NgScrollbarReached implements OnInit, OnDestroy {
    private readonly isBrowser;
    private readonly zone;
    private readonly renderer;
    private readonly injector;
    private readonly scrollbar;
    private readonly disabled;
    /** An array that contains all trigger elements  **/
    private triggerElements;
    /** The intersection observer reference */
    private intersectionObserver;
    /** An array that contains the chosen outputs */
    private subscribedEvents;
    /** The scrollbars element that contains the trigger elements */
    private triggerElementsWrapper;
    /** Reached offset value in px */
    set offsetSetter(value: number);
    set offsetTopSetter(value: number);
    set offsetBottomSetter(value: number);
    set offsetStartSetter(value: number);
    set offsetEndSetter(value: number);
    set disableReachedSetter(value: boolean);
    reachedTop: EventEmitter<void>;
    reachedBottom: EventEmitter<void>;
    reachedStart: EventEmitter<void>;
    reachedEnd: EventEmitter<void>;
    /** A mapper function to ease forwarding the intersected element to its proper output */
    readonly reachedEventActions: Record<string, ReachedEventAction>;
    private onReached;
    private activate;
    private deactivate;
    private setCssVariable;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgScrollbarReached, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgScrollbarReached, "ng-scrollbar[reachedTop], ng-scrollbar[reachedBottom], ng-scrollbar[reachedStart], ng-scrollbar[reachedEnd]", never, { "offsetSetter": { "alias": "reachedOffset"; "required": false; }; "offsetTopSetter": { "alias": "reachedTopOffset"; "required": false; }; "offsetBottomSetter": { "alias": "reachedBottomOffset"; "required": false; }; "offsetStartSetter": { "alias": "reachedStartOffset"; "required": false; }; "offsetEndSetter": { "alias": "reachedEndOffset"; "required": false; }; "disableReachedSetter": { "alias": "disableReached"; "required": false; }; }, { "reachedTop": "reachedTop"; "reachedBottom": "reachedBottom"; "reachedStart": "reachedStart"; "reachedEnd": "reachedEnd"; }, never, never, true, never>;
    static ngAcceptInputType_offsetSetter: unknown;
    static ngAcceptInputType_offsetTopSetter: unknown;
    static ngAcceptInputType_offsetBottomSetter: unknown;
    static ngAcceptInputType_offsetStartSetter: unknown;
    static ngAcceptInputType_offsetEndSetter: unknown;
    static ngAcceptInputType_disableReachedSetter: unknown;
}
export {};
