{"version":3,"file":"ngx-scrollbar.mjs","sources":["../../../projects/ngx-scrollbar/src/lib/ng-scrollbar.model.ts","../../../projects/ngx-scrollbar/src/lib/viewport/viewport-adapter.ts","../../../projects/ngx-scrollbar/src/lib/viewport/scroll-viewport.ts","../../../projects/ngx-scrollbar/src/lib/viewport/resize-sensor.ts","../../../projects/ngx-scrollbar/src/lib/utils/scrollbar-base.ts","../../../projects/ngx-scrollbar/src/lib/utils/scrollbar-manager.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar-core.ts","../../../projects/ngx-scrollbar/src/lib/utils/common.ts","../../../projects/ngx-scrollbar/src/lib/thumb/thumb-adapter.ts","../../../projects/ngx-scrollbar/src/lib/track/track-adapter.ts","../../../projects/ngx-scrollbar/src/lib/track/track.ts","../../../projects/ngx-scrollbar/src/lib/thumb/thumb.ts","../../../projects/ngx-scrollbar/src/lib/scrollbar/scrollbar-adapter.ts","../../../projects/ngx-scrollbar/src/lib/scrollbar/scrollbar.ts","../../../projects/ngx-scrollbar/src/lib/scrollbars/scrollbars.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar-ext.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar.module.ts","../../../projects/ngx-scrollbar/src/ngx-scrollbar.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport type ScrollbarAppearance = 'standard' | 'compact';\r\nexport type ScrollbarOrientation = 'auto' | 'vertical' | 'horizontal';\r\nexport type ScrollbarVisibility = 'hover' | 'always' | 'native';\r\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll';\r\nexport type ScrollbarDragging = 'x' | 'y' | 'none';\r\n\r\nexport enum ScrollbarUpdateReason {\r\n  AfterInit = 'AfterInit',\r\n  Resized = 'ResizeObserver'\r\n}\r\n\r\nexport const NG_SCROLLBAR_OPTIONS: InjectionToken<NgScrollbarOptions> = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\r\n\r\nexport interface NgScrollbarOptions {\r\n  /**\r\n   * Sets the scroll timeline polyfill\r\n   */\r\n  scrollTimelinePolyfill?: string;\r\n  /**\r\n   * Sets the scroll axis of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar-control\r\n   * - `horizontal` Use both vertical and horizontal scrollbar-control\r\n   * - `all` Use both vertical and horizontal scrollbar-control\r\n   */\r\n  orientation?: ScrollbarOrientation;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar-control\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  visibility?: ScrollbarVisibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar-control.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  appearance?: ScrollbarAppearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar-control.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar-control positions\r\n   */\r\n  position?: ScrollbarPosition;\r\n  /** A class forwarded to the scrollbar track element */\r\n  trackClass?: string;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  thumbClass?: string;\r\n  /** Scrolling speed when clicking on scrollbar rail */\r\n  clickScrollDuration?: number;\r\n  /** A flag used to enable/disable the scrollbar pointer events */\r\n  disableInteraction?: boolean;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  sensorThrottleTime?: number;\r\n  /** Whether ResizeObserver is disabled */\r\n  disableSensor?: boolean;\r\n}\r\n\r\nexport enum ViewportClasses {\r\n  Viewport = 'ng-scroll-viewport',\r\n  Content = 'ng-scroll-content'\r\n}\r\n\r\nexport interface ViewportBoundaries {\r\n  contentHeight: number;\r\n  contentWidth: number;\r\n  offsetHeight: number;\r\n  offsetWidth: number;\r\n}\r\n","import { ViewportClasses } from '../ng-scrollbar.model';\r\n\r\nexport class ViewportAdapter {\r\n\r\n  /** The element that wraps the content inside the viewport,\r\n   *  Used to measure the content size and observe content size changes */\r\n  contentWrapperElement: HTMLElement;\r\n\r\n  /** Viewport clientHeight */\r\n  get offsetHeight(): number {\r\n    return this.nativeElement.offsetHeight;\r\n  }\r\n\r\n  /** Viewport clientWidth */\r\n  get offsetWidth(): number {\r\n    return this.nativeElement.offsetWidth;\r\n  }\r\n\r\n  /** Viewport scrollTop */\r\n  get scrollTop(): number {\r\n    return this.nativeElement.scrollTop;\r\n  }\r\n\r\n  /** Viewport scrollLeft */\r\n  get scrollLeft(): number {\r\n    return this.nativeElement.scrollLeft;\r\n  }\r\n\r\n  /** Content height, falls back to scroll height */\r\n  get contentHeight(): number {\r\n    return this.contentWrapperElement?.offsetHeight;\r\n  }\r\n\r\n  /** Content width, falls back to scroll height */\r\n  get contentWidth(): number {\r\n    return this.contentWrapperElement?.offsetWidth;\r\n  }\r\n\r\n  /** The horizontal remaining scrollable distance */\r\n  get scrollMaxX(): number {\r\n    return this.contentWidth - this.offsetWidth;\r\n  }\r\n\r\n  /** The vertical remaining scrollable distance */\r\n  get scrollMaxY(): number {\r\n    return this.contentHeight - this.offsetHeight;\r\n  }\r\n\r\n  constructor(public nativeElement: HTMLElement) {\r\n    nativeElement.classList.add(ViewportClasses.Viewport);\r\n  }\r\n\r\n  /**\r\n   * Initialize viewport\r\n   */\r\n  init(contentSelector?: HTMLElement, spacerSelector?: HTMLElement): void {\r\n    // When integrating the scrollbar with virtual scroll, the content wrapper will have fake size,\r\n    // and a spacer element will have the real size\r\n    // Therefore, if spaceElement is provided, it will be observed instead of the content wrapper\r\n    if (spacerSelector) {\r\n      // Set relative position on the spacer element to enable the functionality of sticky for the scrollbars\r\n      spacerSelector.style.position = 'relative';\r\n      this.contentWrapperElement = spacerSelector;\r\n    }\r\n\r\n    let realContentWrapper: HTMLElement = contentSelector ?? this.nativeElement?.firstElementChild as HTMLElement;\r\n\r\n    // Add content wrapper class\r\n    realContentWrapper?.classList.add(ViewportClasses.Content);\r\n\r\n    // If spacer is not provided, set it as the content wrapper\r\n    if (!this.contentWrapperElement && realContentWrapper) {\r\n      this.contentWrapperElement = realContentWrapper;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll viewport vertically\r\n   */\r\n  scrollYTo(value: number): void {\r\n    this.nativeElement.scrollTop = value;\r\n  }\r\n\r\n  /**\r\n   * Scroll viewport horizontally\r\n   */\r\n  scrollXTo(value: number): void {\r\n    this.nativeElement.scrollLeft = value;\r\n  }\r\n}\r\n","import { Directive, ElementRef, inject, } from '@angular/core';\r\nimport { ViewportAdapter } from './viewport-adapter';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollViewport]'\r\n})\r\nexport class ScrollViewport {\r\n\r\n  readonly viewport: ViewportAdapter = new ViewportAdapter(inject(ElementRef<HTMLElement>).nativeElement);\r\n\r\n}\r\n","import { Observable, Observer, throttleTime } from 'rxjs';\r\nimport { ScrollbarUpdateReason } from '../ng-scrollbar.model';\r\n\r\nexport function resizeSensor(element: HTMLElement, throttleDuration: number, isScrollbar?: boolean): Observable<ScrollbarUpdateReason> {\r\n  // The first time the observer is triggered as soon as the element is observed,\r\n  // So we need to differentiate the reason of the event fired\r\n  let reason: ScrollbarUpdateReason = ScrollbarUpdateReason.AfterInit;\r\n\r\n  let resizeObserver: ResizeObserver;\r\n\r\n  const stream: Observable<ScrollbarUpdateReason> = new Observable((observer: Observer<ScrollbarUpdateReason>) => {\r\n    resizeObserver = new ResizeObserver(() => {\r\n      observer.next(reason);\r\n      // After first init event, mark the reason to be a resize from now on.\r\n      reason = ScrollbarUpdateReason.Resized;\r\n    });\r\n    resizeObserver.observe(element);\r\n\r\n    // If a content element has a supporting content scrollbars, observe it!\r\n    if (!isScrollbar && element.firstElementChild) {\r\n      resizeObserver.observe(element.firstElementChild);\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver?.disconnect();\r\n    };\r\n  });\r\n\r\n  return throttleDuration ? stream.pipe(throttleTime(throttleDuration, null, {\r\n    leading: true,\r\n    trailing: true\r\n  })) : stream;\r\n}\r\n","import { InjectionToken, Signal, WritableSignal } from '@angular/core';\r\nimport { Direction } from '@angular/cdk/bidi';\r\nimport { RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\r\nimport { ViewportAdapter } from '../viewport';\r\nimport { ScrollbarDragging, ViewportBoundaries } from '../ng-scrollbar.model';\r\n\r\n\r\n/**\r\n * Injection token that can be used to query for a `NgScrollbar`.\r\n * Used primarily to avoid circular imports.\r\n */\r\nexport const NG_SCROLLBAR: InjectionToken<_NgScrollbar> = new InjectionToken<_NgScrollbar>('_NG_SCROLLBAR');\r\n\r\nexport interface _NgScrollbar {\r\n  nativeElement: HTMLElement;\r\n  rtlScrollAxisType: RtlScrollAxisType;\r\n  dragging: WritableSignal<ScrollbarDragging>;\r\n  direction: Signal<Direction>;\r\n  disableSensor: Signal<boolean>;\r\n  sensorThrottleTime: Signal<number>;\r\n  interactionDisabled: Signal<boolean>;\r\n  disableInteraction: Signal<boolean>;\r\n  isVerticallyScrollable: Signal<boolean>;\r\n  isHorizontallyScrollable: Signal<boolean>;\r\n  verticalUsed: Signal<boolean>;\r\n  horizontalUsed: Signal<boolean>;\r\n  viewportDimension: Signal<ViewportBoundaries>;\r\n  thumbClass: string;\r\n  trackClass: string;\r\n\r\n  get viewport(): ViewportAdapter;\r\n\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void>;\r\n}\r\n","import { Injectable, Inject, inject, Optional, signal, WritableSignal, PLATFORM_ID } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from '../ng-scrollbar.model';\r\n\r\n\r\nconst defaultOptions: NgScrollbarOptions = {\r\n  scrollTimelinePolyfill: 'https://flackr.github.io/scroll-timeline/dist/scroll-timeline.js',\r\n  trackClass: '',\r\n  thumbClass: '',\r\n  orientation: 'auto',\r\n  appearance: 'standard',\r\n  visibility: 'native',\r\n  position: 'native',\r\n  clickScrollDuration: 50,\r\n  sensorThrottleTime: 0,\r\n  disableSensor: false,\r\n  disableInteraction: false\r\n};\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ScrollbarManager {\r\n\r\n  private readonly isBrowser: boolean = isPlatformBrowser(inject(PLATFORM_ID));\r\n\r\n  readonly document: Document = inject(DOCUMENT);\r\n\r\n  readonly window: Window = this.document.defaultView;\r\n\r\n  readonly globalOptions: NgScrollbarOptions = {};\r\n\r\n  readonly rtlScrollAxisType: RtlScrollAxisType = getRtlScrollAxisType();\r\n\r\n  readonly scrollTimelinePolyfill: WritableSignal<any> = signal(null);\r\n\r\n  constructor(@Optional() @Inject(NG_SCROLLBAR_OPTIONS) options: NgScrollbarOptions) {\r\n    this.globalOptions = options ? { ...defaultOptions, ...options } : defaultOptions;\r\n\r\n    if (this.isBrowser && !this.window['ScrollTimeline'] && !CSS.supports('animation-timeline', 'scroll()')) {\r\n      this.initPolyfill();\r\n    }\r\n  }\r\n\r\n  async initPolyfill(): Promise<void> {\r\n    try {\r\n      // Create a script element\r\n      const script: HTMLScriptElement = this.document.createElement('script');\r\n      script.src = this.globalOptions.scrollTimelinePolyfill;\r\n\r\n      // Wait for the script to load\r\n      await new Promise<any>((resolve, reject) => {\r\n        script.onload = resolve;\r\n        script.onerror = reject;\r\n        this.document.head.appendChild(script);\r\n      });\r\n\r\n      // Once loaded, access and execute the function attached to the window object\r\n      if (this.window['ScrollTimeline']) {\r\n        this.scrollTimelinePolyfill.set(window['ScrollTimeline']);\r\n      } else {\r\n        console.error('ScrollTimeline is not attached to the window object.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading ScrollTimeline script:', error);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  inject,\r\n  signal,\r\n  effect,\r\n  computed,\r\n  numberAttribute,\r\n  booleanAttribute,\r\n  runInInjectionContext,\r\n  input,\r\n  EventEmitter,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ElementRef,\r\n  NgZone,\r\n  Signal,\r\n  InputSignal,\r\n  Injector,\r\n  WritableSignal,\r\n  EffectCleanupRegisterFn,\r\n  InputSignalWithTransform\r\n} from '@angular/core';\r\nimport { Platform, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { Subscription, map, tap } from 'rxjs';\r\n\r\nimport {\r\n  SmoothScrollElement,\r\n  SmoothScrollManager,\r\n  SmoothScrollToElementOptions,\r\n  SmoothScrollToOptions\r\n} from 'ngx-scrollbar/smooth-scroll';\r\nimport { Scrollbars } from './scrollbars/scrollbars';\r\nimport { _NgScrollbar, NG_SCROLLBAR } from './utils/scrollbar-base';\r\nimport { resizeSensor, ViewportAdapter } from './viewport';\r\nimport { ScrollbarManager } from './utils/scrollbar-manager';\r\nimport {\r\n  ScrollbarAppearance,\r\n  ScrollbarDragging,\r\n  ScrollbarPosition,\r\n  ScrollbarOrientation,\r\n  ScrollbarUpdateReason,\r\n  ScrollbarVisibility,\r\n  ViewportBoundaries\r\n} from './ng-scrollbar.model';\r\n\r\ninterface ViewportState {\r\n  verticalUsed: boolean,\r\n  horizontalUsed: boolean,\r\n  isVerticallyScrollable: boolean,\r\n  isHorizontallyScrollable: boolean,\r\n}\r\n\r\n@Directive({\r\n  host: {\r\n    '[class.ng-scrollbar]': 'true',\r\n    '[attr.verticalUsed]': 'verticalUsed()',\r\n    '[attr.horizontalUsed]': 'horizontalUsed()',\r\n    '[attr.isVerticallyScrollable]': 'isVerticallyScrollable()',\r\n    '[attr.isHorizontallyScrollable]': 'isHorizontallyScrollable()',\r\n    '[attr.mobile]': 'isMobile',\r\n    '[attr.dir]': 'direction()',\r\n    '[attr.position]': 'position',\r\n    '[attr.dragging]': 'dragging()',\r\n    '[attr.appearance]': 'appearance',\r\n    '[attr.visibility]': 'visibility()',\r\n    '[attr.orientation]': 'orientation()',\r\n    '[attr.disableInteraction]': 'interactionDisabled()'\r\n  },\r\n  providers: [{ provide: NG_SCROLLBAR, useExisting: NgScrollbarCore }]\r\n})\r\nexport abstract class NgScrollbarCore implements _NgScrollbar, OnInit, AfterViewInit {\r\n\r\n  private readonly platform: Platform = inject(Platform);\r\n  private readonly zone: NgZone = inject(NgZone);\r\n  private readonly injector: Injector = inject(Injector);\r\n\r\n  readonly isMobile: boolean = this.platform.SAFARI || this.platform.ANDROID;\r\n\r\n  dir: Directionality = inject(Directionality);\r\n\r\n  manager: ScrollbarManager = inject(ScrollbarManager);\r\n\r\n  smoothScroll: SmoothScrollManager = inject(SmoothScrollManager);\r\n\r\n  nativeElement: HTMLElement = inject(ElementRef<HTMLElement>).nativeElement;\r\n\r\n  rtlScrollAxisType: RtlScrollAxisType = this.manager.rtlScrollAxisType;\r\n\r\n  direction: Signal<Direction>;\r\n\r\n  /**\r\n   * Indicates when scrollbar thumb is being dragged\r\n   */\r\n  dragging: WritableSignal<ScrollbarDragging> = signal('none');\r\n\r\n  /**\r\n   * Sets the supported scroll track of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar\r\n   * - `horizontal` Use both vertical and horizontal scrollbar\r\n   * - `auto` Use both vertical and horizontal scrollbar\r\n   */\r\n  orientation: InputSignal<ScrollbarOrientation> = input<ScrollbarOrientation>(this.manager.globalOptions.orientation);\r\n\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  visibility: InputSignal<ScrollbarVisibility> = input<ScrollbarVisibility>(this.manager.globalOptions.visibility);\r\n\r\n  /** Disables scrollbar interaction like dragging thumb and jumping by track click */\r\n  disableInteraction: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(this.manager.globalOptions.disableInteraction, {\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  /** A computed signal for disabling the interaction */\r\n  interactionDisabled: Signal<boolean> = computed(() => {\r\n    return this.isMobile || this.disableInteraction();\r\n  });\r\n\r\n  /** Whether ResizeObserver is disabled */\r\n  disableSensor: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(this.manager.globalOptions.disableSensor, {\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  /** Throttle interval for detecting changes via ResizeObserver */\r\n  sensorThrottleTime: InputSignal<number> = input<number, number>(this.manager.globalOptions.sensorThrottleTime, {\r\n    transform: numberAttribute\r\n  });\r\n\r\n  viewportDimension: WritableSignal<ViewportBoundaries> = signal({\r\n    contentHeight: 0,\r\n    contentWidth: 0,\r\n    offsetHeight: 0,\r\n    offsetWidth: 0\r\n  });\r\n\r\n  state: Signal<ViewportState> = computed(() => {\r\n    let verticalUsed: boolean = false;\r\n    let horizontalUsed: boolean = false;\r\n    let isVerticallyScrollable: boolean = false;\r\n    let isHorizontallyScrollable: boolean = false;\r\n\r\n    const orientation: ScrollbarOrientation = this.orientation();\r\n    const visibility: ScrollbarVisibility = this.visibility();\r\n    const viewport: ViewportBoundaries = this.viewportDimension();\r\n\r\n    // Check if vertical scrollbar should be displayed\r\n    if (orientation === 'auto' || orientation === 'vertical') {\r\n      isVerticallyScrollable = viewport.contentHeight > viewport.offsetHeight;\r\n      verticalUsed = visibility === 'always' || isVerticallyScrollable;\r\n    }\r\n    // Check if horizontal scrollbar should be displayed\r\n    if (orientation === 'auto' || orientation === 'horizontal') {\r\n      isHorizontallyScrollable = viewport.contentWidth > viewport.offsetWidth;\r\n      horizontalUsed = visibility === 'always' || isHorizontallyScrollable;\r\n    }\r\n\r\n    return {\r\n      verticalUsed,\r\n      horizontalUsed,\r\n      isVerticallyScrollable,\r\n      isHorizontallyScrollable,\r\n    };\r\n  });\r\n\r\n  isVerticallyScrollable: Signal<boolean> = computed(() => this.state().isVerticallyScrollable);\r\n  isHorizontallyScrollable: Signal<boolean> = computed(() => this.state().isHorizontallyScrollable);\r\n  verticalUsed: Signal<boolean> = computed(() => this.state().verticalUsed);\r\n  horizontalUsed: Signal<boolean> = computed(() => this.state().horizontalUsed);\r\n\r\n  /** Scroll duration when the scroll track is clicked */\r\n  @Input({\r\n    alias: 'clickScrollDuration',\r\n    transform: numberAttribute\r\n  }) trackClickDuration: number = this.manager.globalOptions.clickScrollDuration;\r\n\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  @Input() appearance: ScrollbarAppearance = this.manager.globalOptions.appearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar positions\r\n   */\r\n  @Input() position: ScrollbarPosition = this.manager.globalOptions.position;\r\n\r\n  /** A class forwarded to the scrollbar track element */\r\n  @Input() trackClass: string = this.manager.globalOptions.trackClass;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  @Input() thumbClass: string = this.manager.globalOptions.thumbClass;\r\n\r\n  /** Steam that emits when scrollbar is initialized */\r\n  @Output() afterInit: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Steam that emits when scrollbar is updated */\r\n  @Output() afterUpdate: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Resize observer subscription */\r\n  private sizeChangeSub: Subscription;\r\n\r\n  abstract viewport: ViewportAdapter;\r\n\r\n  abstract scrollbars: Scrollbars;\r\n\r\n  ngOnInit(): void {\r\n    runInInjectionContext(this.injector, () => {\r\n      // The direction signal cannot be initialized in the constructor\r\n      // Because it initially returns 'ltr' even if dir.value is 'rtl`\r\n      this.direction = toSignal<Direction, Direction>(this.dir.change.pipe(map(() => this.dir.value)), { initialValue: this.dir.value });\r\n\r\n      effect((onCleanup: EffectCleanupRegisterFn) => {\r\n        // Check whether sensor should be enabled\r\n        if (this.disableSensor()) {\r\n          // If sensor is disabled update manually\r\n          this.sizeChangeSub?.unsubscribe();\r\n        } else {\r\n          if (this.platform.isBrowser) {\r\n            this.sizeChangeSub?.unsubscribe();\r\n\r\n            this.sizeChangeSub = resizeSensor(this.viewport.nativeElement, this.sensorThrottleTime()).pipe(\r\n              tap((reason: ScrollbarUpdateReason) => this.update(reason))\r\n            ).subscribe();\r\n          }\r\n        }\r\n\r\n        onCleanup(() => this.sizeChangeSub?.unsubscribe());\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If sensor is disabled, update to evaluate the state\r\n    if (this.platform.isBrowser && this.disableSensor()) {\r\n      // In case of 3rd party library, need to wait for content to be rendered\r\n      requestAnimationFrame(() => {\r\n        this.update(ScrollbarUpdateReason.AfterInit);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update local state and the internal scrollbar controls\r\n   */\r\n  update(reason?: ScrollbarUpdateReason): void {\r\n    this.updateCSSVariables();\r\n\r\n    this.zone.run(() => {\r\n      this.viewportDimension.set({\r\n        contentHeight: this.viewport.contentHeight,\r\n        contentWidth: this.viewport.contentWidth,\r\n        offsetHeight: this.viewport.offsetHeight,\r\n        offsetWidth: this.viewport.offsetWidth\r\n      });\r\n\r\n      if (reason === ScrollbarUpdateReason.AfterInit) {\r\n        this.afterInit.emit();\r\n      } else {\r\n        this.afterUpdate.emit();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Smooth scroll functions\r\n   */\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\r\n    return this.smoothScroll.scrollTo(this.viewport!.nativeElement, {\r\n      duration: this.trackClickDuration,\r\n      ...options\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(target: SmoothScrollElement, options?: SmoothScrollToElementOptions): Promise<void> {\r\n    return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\r\n  }\r\n\r\n  /**\r\n   * Update Essential CSS variables\r\n   */\r\n  private updateCSSVariables(): void {\r\n    this.nativeElement.style.setProperty('--content-height', `${ this.viewport.contentHeight }`);\r\n    this.nativeElement.style.setProperty('--content-width', `${ this.viewport.contentWidth }`);\r\n    this.nativeElement.style.setProperty('--viewport-height', `${ this.viewport.offsetHeight }`);\r\n    this.nativeElement.style.setProperty('--viewport-width', `${ this.viewport.offsetWidth }`);\r\n  }\r\n}\r\n","import { MonoTypeOperatorFunction, tap } from 'rxjs';\r\n\r\nexport function preventSelection(doc: Document): MonoTypeOperatorFunction<any> {\r\n  return tap(() => doc.onselectstart = () => false);\r\n}\r\n\r\nexport function enableSelection(doc: Document): MonoTypeOperatorFunction<any> {\r\n  return tap(() => doc.onselectstart = null);\r\n}\r\n\r\nexport function stopPropagation(): MonoTypeOperatorFunction<any> {\r\n  return tap((e: MouseEvent) => {\r\n    // Have to prevent default to avoid unexpected movement whe you grab object beneath scrollbar #476\r\n    // https://github.com/MurhafSousli/ngx-scrollbar/issues/476\r\n    e.preventDefault();\r\n    e.stopPropagation()\r\n  });\r\n}\r\n","import { Directive, inject, effect, NgZone, ElementRef } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Observable, of, fromEvent, map, takeUntil, tap, switchMap } from 'rxjs';\r\nimport { enableSelection, preventSelection, stopPropagation } from '../utils/common';\r\nimport { TrackAdapter } from '../track/track-adapter';\r\nimport { NG_SCROLLBAR, _NgScrollbar } from '../utils/scrollbar-base';\r\nimport { ScrollbarDragging } from '../ng-scrollbar.model';\r\nimport { ScrollbarManager } from '../utils/scrollbar-manager';\r\n\r\n// @dynamic\r\n@Directive()\r\nexport abstract class ThumbAdapter {\r\n\r\n  private readonly zone: NgZone = inject(NgZone);\r\n  protected readonly document: Document = inject(DOCUMENT);\r\n  protected readonly cmp: _NgScrollbar = inject(NG_SCROLLBAR);\r\n  private readonly manager: ScrollbarManager = inject(ScrollbarManager);\r\n  private readonly track: TrackAdapter = inject(TrackAdapter);\r\n  readonly nativeElement: HTMLElement = inject(ElementRef<HTMLElement>).nativeElement;\r\n\r\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\r\n  protected abstract get pageProperty(): string;\r\n\r\n  // Returns either 'clientHeight' or 'clientWidth' according to scrollbar axis\r\n  protected abstract get clientProperty(): string;\r\n\r\n  abstract get dragStartOffset(): number;\r\n\r\n  abstract get offset(): number;\r\n\r\n  // Returns thumb size, clientHeight or clientWidth\r\n  abstract get size(): number;\r\n\r\n  abstract get viewportScrollMax(): number;\r\n\r\n  protected abstract axis: 'x' | 'y';\r\n\r\n  protected animation: Animation;\r\n\r\n  get trackMax(): number {\r\n    return this.track.size - this.size;\r\n  }\r\n\r\n  // Get thumb client rect\r\n  get clientRect(): DOMRect {\r\n    return this.nativeElement.getBoundingClientRect();\r\n  }\r\n\r\n  /**\r\n   * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\r\n   * This function is called by thumb drag event using viewport or scrollbar pointer events\r\n   */\r\n  get dragged(): Observable<number> {\r\n    return fromEvent<PointerEvent>(this.nativeElement, 'pointerdown').pipe(\r\n      stopPropagation(),\r\n      switchMap((e: PointerEvent) => {\r\n        let trackMaxStart: number;\r\n        let scrollMaxStart: number;\r\n\r\n        const dragStart: Observable<PointerEvent> = of<PointerEvent>(e).pipe(\r\n          preventSelection(this.document),\r\n          tap(() => {\r\n            // Capture scrollMax and trackMax once\r\n            trackMaxStart = this.trackMax;\r\n            scrollMaxStart = this.viewportScrollMax;\r\n            this.setDragging(this.axis);\r\n          }),\r\n        );\r\n\r\n        const dragging: Observable<PointerEvent> = fromEvent<PointerEvent>(this.document, 'pointermove').pipe(stopPropagation());\r\n\r\n        const dragEnd: Observable<PointerEvent> = fromEvent<PointerEvent>(this.document, 'pointerup', { capture: true }).pipe(\r\n          stopPropagation(),\r\n          enableSelection(this.document),\r\n          tap(() => this.setDragging('none'))\r\n        );\r\n\r\n        return dragStart.pipe(\r\n          map((e: PointerEvent) => e[this.pageProperty]),\r\n          map((pageOffset: number) => pageOffset - this.dragStartOffset),\r\n          switchMap((mouseDownOffset: number) => dragging.pipe(\r\n            map((e: PointerEvent) => e[this.clientProperty]),\r\n            // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\r\n            map((mouseOffset: number) => mouseOffset - this.track.offset),\r\n            map((offset: number) => scrollMaxStart * (offset - mouseDownOffset) / trackMaxStart),\r\n            map((position: number) => this.handleDrag(position, scrollMaxStart)),\r\n            tap((position: number) => this.scrollTo(position)),\r\n            takeUntil(dragEnd)\r\n          ))\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      const script: any = this.manager.scrollTimelinePolyfill();\r\n      if (script && !this.animation) {\r\n        this.animation = startPolyfill(script, this.nativeElement, this.cmp.viewport.nativeElement, this.axis);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setDragging(value: ScrollbarDragging): void {\r\n    this.zone.run(() => this.cmp.dragging.set(value));\r\n  }\r\n\r\n  // Scroll viewport instantly\r\n  protected abstract scrollTo(position: number): void;\r\n\r\n  // Handle dragging position (Support LTR and RTL directions for the horizontal scrollbar)\r\n  protected abstract handleDrag(position: number, scrollMax?: number): number;\r\n}\r\n\r\nfunction startPolyfill(ScrollTimeline: any, element: HTMLElement, source: HTMLElement, axis: 'x' | 'y'): Animation {\r\n  return element.animate(\r\n    {\r\n      translate: [\r\n        'var(--_scrollbar-thumb-transform-from)',\r\n        'var(--_scrollbar-thumb-transform-to)'\r\n      ]\r\n    },\r\n    {\r\n      fill: 'both',\r\n      easing: 'linear',\r\n      timeline: new ScrollTimeline({ source, axis })\r\n    } as any\r\n  );\r\n}\r\n","import { ContentChild, Directive, inject, effect, ElementRef, EffectCleanupRegisterFn } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  Observable,\r\n  BehaviorSubject,\r\n  merge,\r\n  fromEvent,\r\n  tap,\r\n  map,\r\n  expand,\r\n  delay,\r\n  switchMap,\r\n  finalize,\r\n  takeWhile,\r\n  takeUntil,\r\n  distinctUntilChanged,\r\n  EMPTY, Subscription\r\n} from 'rxjs';\r\nimport { NG_SCROLLBAR, _NgScrollbar } from '../utils/scrollbar-base';\r\nimport { enableSelection, preventSelection, stopPropagation } from '../utils/common';\r\nimport { ThumbAdapter } from '../thumb/thumb-adapter';\r\nimport { resizeSensor } from '../viewport';\r\n\r\n\r\n// @dynamic\r\n@Directive()\r\nexport abstract class TrackAdapter {\r\n\r\n  readonly nativeElement: HTMLElement = inject(ElementRef<HTMLElement>).nativeElement;\r\n  protected readonly cmp: _NgScrollbar = inject(NG_SCROLLBAR);\r\n  protected readonly document: Document = inject(DOCUMENT);\r\n\r\n  /** Resize observer subscription */\r\n  private sizeChangeSub: Subscription;\r\n\r\n  protected abstract get viewportScrollSize(): number;\r\n\r\n  protected abstract get viewportViewportSize(): number;\r\n\r\n  protected abstract get viewportScrollOffset(): number;\r\n\r\n  // The active mouse event for the ongoing track dragging\r\n  private currMousePosition: number;\r\n  private scrollDirection: 'forward' | 'backward';\r\n\r\n  @ContentChild(ThumbAdapter) private thumb: ThumbAdapter;\r\n\r\n  get dragged(): Observable<any> {\r\n    const mouseDown$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.nativeElement, 'pointerdown').pipe(\r\n      stopPropagation(),\r\n      preventSelection(this.document)\r\n    );\r\n    const mouseUp$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.document, 'pointerup', { passive: true }).pipe(\r\n      enableSelection(this.document)\r\n    );\r\n\r\n    // The reason why we use mousemove instead of mouseover, that we need to save the current mouse location\r\n    const mouseMove$: Observable<boolean> = fromEvent<PointerEvent>(this.nativeElement, 'pointermove', { passive: true }).pipe(\r\n      map((e: PointerEvent) => {\r\n        this.currMousePosition = e[this.clientProperty];\r\n        return true;\r\n      })\r\n    );\r\n\r\n    const mouseOut$: Observable<boolean> = fromEvent<PointerEvent>(this.nativeElement, 'pointerout', { passive: true }).pipe(\r\n      map(() => {\r\n        return false;\r\n      })\r\n    );\r\n\r\n    // Stream that combines mousemove and mouseover and only emit when mouse gets in or out the track\r\n    // NOTE: we must use a BehaviorSubject to get the value asap the onTrackFirstClick function is called\r\n    const mouseOverTrack$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n    return mouseDown$.pipe(\r\n      switchMap((startEvent: PointerEvent) => {\r\n        // We need to subscribe to mousemove and mouseout events before calling the onTrackFirstClick\r\n        // Because we need to tell if mouse is over or not asap the first function is done\r\n        // Otherwise, if user click first time and moved the mouse away immediately, the mouseout will not be detected\r\n        merge(mouseMove$, mouseOut$).pipe(\r\n          distinctUntilChanged(),\r\n          tap((over: boolean) => mouseOverTrack$.next(over)),\r\n          takeUntil(mouseUp$)\r\n        ).subscribe();\r\n\r\n        // TODO: Verify if this is needed\r\n        // This should stop propagating the move event when pointer is moving over the thumb\r\n        fromEvent(this.thumb.nativeElement, 'pointermove').pipe(\r\n          stopPropagation(),\r\n          takeUntil(mouseUp$)\r\n        ).subscribe();\r\n\r\n        return this.onTrackFirstClick(startEvent).pipe(\r\n          switchMap((final: boolean) => {\r\n            // If scroll has reached the destination from the first scroll call, end the stream\r\n            if (final) {\r\n              return EMPTY;\r\n            }\r\n            // Otherwise, activate mousemove and mouseout events and switch to ongoing scroll calls\r\n            return mouseOverTrack$.pipe(\r\n              switchMap((over: boolean) => {\r\n                const currDirection = this.getScrollDirection();\r\n                const sameDirection: boolean = this.scrollDirection === currDirection;\r\n                // If mouse is out the track pause the scroll calls, otherwise keep going\r\n                return (over && sameDirection) ? this.onTrackOngoingMousedown() : EMPTY;\r\n              }),\r\n              finalize(() => {\r\n                // Reset the mouseOverTrack$ state\r\n                mouseOverTrack$.next(true);\r\n              })\r\n            );\r\n          }),\r\n          takeUntil(mouseUp$),\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  abstract readonly cssLengthProperty: string;\r\n\r\n  abstract readonly clientProperty: string;\r\n\r\n  // Returns the track size, clientHeight or clientWidth\r\n  abstract get size(): number;\r\n\r\n  // Returns the start offset either 'clientRect.top' or 'clientRect.left'\r\n  abstract get offset(): number;\r\n\r\n  // Get track client rect\r\n  get clientRect(): DOMRect {\r\n    return this.nativeElement.getBoundingClientRect();\r\n  }\r\n\r\n  private getScrollDirection(): 'forward' | 'backward' {\r\n    return this.currMousePosition - this.thumb.offset > 0 ? 'forward' : 'backward';\r\n  }\r\n\r\n  constructor() {\r\n    effect((onCleanup: EffectCleanupRegisterFn) => {\r\n      if (this.cmp.disableSensor()) {\r\n        this.updateCSSVariables();\r\n        this.sizeChangeSub?.unsubscribe();\r\n      } else {\r\n        this.sizeChangeSub = resizeSensor(this.nativeElement, this.cmp.sensorThrottleTime(), true).pipe(\r\n          tap(() => this.updateCSSVariables())\r\n        ).subscribe();\r\n      }\r\n\r\n      onCleanup(() => this.sizeChangeSub?.unsubscribe());\r\n    });\r\n  }\r\n\r\n  private updateCSSVariables(): void {\r\n    this.cmp.nativeElement.style.setProperty(this.cssLengthProperty, `${ this.size }`);\r\n  }\r\n\r\n  /**\r\n   * Scrolls to position when mouse is down the on the track the first time\r\n   */\r\n  onTrackFirstClick(e: PointerEvent): Observable<boolean> {\r\n    this.currMousePosition = e[this.clientProperty];\r\n    // Save scroll direction\r\n    this.scrollDirection = this.getScrollDirection();\r\n\r\n    let value: number;\r\n    let final: boolean;\r\n\r\n    // Check which direction should the scroll go (up or down)\r\n    if (this.scrollDirection === 'forward') {\r\n      // Scroll down\r\n      const scrollDownIncrement: number = this.viewportScrollOffset + this.viewportViewportSize;\r\n      // Check if the incremental position is bigger than the scroll max\r\n      const scrollMax: number = this.viewportScrollSize - this.viewportViewportSize;\r\n      if (scrollDownIncrement >= scrollMax) {\r\n        value = scrollMax;\r\n        final = true;\r\n      } else {\r\n        value = scrollDownIncrement;\r\n      }\r\n    } else {\r\n      // Scroll up\r\n      const scrollUpIncrement: number = this.viewportScrollOffset - this.viewportViewportSize;\r\n      if (scrollUpIncrement <= 0) {\r\n        value = 0;\r\n        final = true;\r\n      } else {\r\n        value = scrollUpIncrement;\r\n      }\r\n    }\r\n\r\n    return this.scrollTo(value).pipe(\r\n      delay(200),\r\n      map(() => final)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Callback that is called when mouse is still down on the track\r\n   */\r\n  onTrackOngoingMousedown(): Observable<boolean> {\r\n    const scrollFinal: number = this.getRelativePosition();\r\n\r\n    let value: number;\r\n    let final: boolean;\r\n\r\n    // Check which direction should the scroll go (up or down)\r\n    if (this.scrollDirection === 'forward') {\r\n      // Scroll down\r\n      const scrollDownIncrement: number = this.viewportScrollOffset + this.viewportViewportSize;\r\n      // Check if the incremental position is bigger than the scroll max\r\n      if (scrollDownIncrement >= scrollFinal) {\r\n        value = scrollFinal;\r\n        final = true;\r\n      } else {\r\n        value = scrollDownIncrement;\r\n      }\r\n    } else {\r\n      // Scroll up\r\n      const scrollUpIncrement: number = this.viewportScrollOffset - this.viewportViewportSize;\r\n      if (scrollUpIncrement <= scrollFinal) {\r\n        value = scrollFinal;\r\n        final = true;\r\n      } else {\r\n        value = scrollUpIncrement;\r\n      }\r\n    }\r\n\r\n    return this.scrollTo(value).pipe(\r\n      takeWhile(() => !final),\r\n      expand(() => this.onTrackOngoingMousedown())\r\n    );\r\n  }\r\n\r\n  private getRelativePosition(): number {\r\n    const clickPosition: number = this.currMousePosition - this.offset;\r\n    const current: number = clickPosition / this.size;\r\n    return current * (this.viewportScrollSize - this.viewportViewportSize);\r\n  }\r\n\r\n  protected abstract scrollTo(position: number): Observable<void>;\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { fromPromise } from 'rxjs/internal/observable/innerFrom';\r\nimport { TrackAdapter } from './track-adapter';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarTrackX]',\r\n  providers: [{ provide: TrackAdapter, useExisting: TrackXDirective }]\r\n})\r\nexport class TrackXDirective extends TrackAdapter {\r\n\r\n  readonly cssLengthProperty: string = '--track-x-length';\r\n\r\n  readonly clientProperty: string = 'clientX';\r\n\r\n  get offset(): number {\r\n    return this.clientRect.left;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.nativeElement.clientWidth;\r\n  }\r\n\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.contentWidth;\r\n  }\r\n\r\n  protected get viewportViewportSize(): number {\r\n    return this.cmp.viewport.offsetWidth;\r\n  }\r\n\r\n  protected get viewportScrollOffset(): number {\r\n    return this.cmp.viewport.scrollLeft;\r\n  }\r\n\r\n  protected scrollTo(left: number): Observable<void> {\r\n    return fromPromise(this.cmp.scrollTo({ left }));\r\n  }\r\n}\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarTrackY]',\r\n  providers: [{ provide: TrackAdapter, useExisting: TrackYDirective }]\r\n})\r\nexport class TrackYDirective extends TrackAdapter {\r\n\r\n  readonly cssLengthProperty: string = '--track-y-length';\r\n\r\n  readonly clientProperty: string = 'clientY';\r\n\r\n  get offset(): number {\r\n    return this.clientRect.top;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.nativeElement.clientHeight;\r\n  }\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.contentHeight;\r\n  }\r\n\r\n  protected get viewportViewportSize(): number {\r\n    return this.cmp.viewport.offsetHeight;\r\n  }\r\n\r\n  protected get viewportScrollOffset(): number {\r\n    return this.cmp.viewport.scrollTop;\r\n  }\r\n\r\n  protected scrollTo(top: number): Observable<void> {\r\n    return fromPromise(this.cmp.scrollTo({ top }));\r\n  }\r\n}\r\n","import { Directive, effect } from '@angular/core';\r\nimport { RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { ThumbAdapter } from './thumb-adapter';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarThumbX]',\r\n  providers: [{ provide: ThumbAdapter, useExisting: ThumbXDirective }]\r\n})\r\nexport class ThumbXDirective extends ThumbAdapter {\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientX';\r\n  }\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageX';\r\n  }\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxX;\r\n  }\r\n\r\n  get dragStartOffset(): number {\r\n    return this.clientRect.left + this.document.defaultView.pageXOffset;\r\n  }\r\n\r\n  get offset(): number {\r\n    return this.clientRect.left;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.nativeElement.clientWidth;\r\n  }\r\n\r\n  protected axis: 'x' | 'y' = 'x';\r\n\r\n  protected handleDrag: (position: number, scrollMax: number) => number;\r\n\r\n  constructor() {\r\n    super();\r\n    effect(() => {\r\n      if (this.cmp.direction() === 'rtl') {\r\n        if (this.cmp.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n          this.handleDrag = (position: number, scrollMax: number): number => -(scrollMax - position);\r\n        }\r\n        if (this.cmp.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n          this.handleDrag = (position: number, scrollMax: number): number => position - scrollMax;\r\n        }\r\n      } else {\r\n        this.handleDrag = (position: number): number => position;\r\n      }\r\n    });\r\n  }\r\n\r\n  protected scrollTo(position: number): void {\r\n    this.cmp.viewport.scrollXTo(position);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarThumbY]',\r\n  providers: [{ provide: ThumbAdapter, useExisting: ThumbYDirective }]\r\n})\r\nexport class ThumbYDirective extends ThumbAdapter {\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageY';\r\n  }\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxY;\r\n  }\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientY';\r\n  }\r\n\r\n  get dragStartOffset(): number {\r\n    return this.clientRect.top + this.document.defaultView.pageYOffset;\r\n  }\r\n\r\n  get offset(): number {\r\n    return this.clientRect.top;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.nativeElement.clientHeight;\r\n  }\r\n\r\n  protected axis: 'x' | 'y' = 'y';\r\n\r\n  protected handleDrag = (position: number): number => position;\r\n\r\n  protected scrollTo(position: number): void {\r\n    this.cmp.viewport.scrollYTo(position);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ViewChild,\r\n  effect,\r\n  inject,\r\n  NgZone,\r\n  ElementRef,\r\n  EffectCleanupRegisterFn\r\n} from '@angular/core';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { ThumbAdapter } from '../thumb/thumb-adapter';\r\nimport { TrackAdapter } from '../track/track-adapter';\r\nimport { NG_SCROLLBAR, _NgScrollbar } from '../utils/scrollbar-base';\r\n\r\n// @dynamic\r\n@Directive()\r\nexport abstract class ScrollbarAdapter {\r\n\r\n  // Thumb directive reference\r\n  readonly thumb: ThumbAdapter;\r\n  // Track directive reference\r\n  readonly track: TrackAdapter;\r\n  // Pointer events subscription\r\n  private pointerEventsSub: Subscription;\r\n  // Zone reference\r\n  protected readonly zone: NgZone = inject(NgZone);\r\n  // Host component reference\r\n  readonly cmp: _NgScrollbar = inject(NG_SCROLLBAR);\r\n\r\n  // Sticky wrapper reference for testing purpose\r\n  @ViewChild('sticky', { static: true }) readonly sticky: ElementRef<HTMLElement>;\r\n\r\n  constructor() {\r\n    effect((onCleanup: EffectCleanupRegisterFn) => {\r\n      if (this.cmp.interactionDisabled()) {\r\n        this.pointerEventsSub?.unsubscribe();\r\n      } else {\r\n        this.zone.runOutsideAngular(() => {\r\n          this.pointerEventsSub = merge(\r\n            // Activate scrollbar thumb drag event\r\n            this.thumb.dragged,\r\n            // Activate scrollbar track click event\r\n            this.track.dragged\r\n          ).subscribe();\r\n        });\r\n      }\r\n\r\n      onCleanup(() => this.pointerEventsSub?.unsubscribe());\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\r\nimport { TrackXDirective, TrackYDirective } from '../track/track';\r\nimport { ThumbXDirective, ThumbYDirective } from '../thumb/thumb';\r\nimport { ScrollbarAdapter } from './scrollbar-adapter';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'scrollbar-y',\r\n  template: `\r\n    <div #sticky class=\"ng-scrollbar-sticky\">\r\n      <div scrollbarTrackY class=\"ng-scrollbar-track {{ cmp.trackClass }}\">\r\n        <div scrollbarThumbY class=\"ng-scrollbar-thumb {{ cmp.thumbClass }}\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./shared.scss', './vertical.scss'],\r\n  imports: [TrackYDirective, ThumbYDirective],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScrollbarY extends ScrollbarAdapter {\r\n\r\n  @ViewChild(TrackYDirective, { static: true }) override readonly track: TrackYDirective;\r\n  @ViewChild(ThumbYDirective, { static: true }) override readonly thumb: ThumbYDirective;\r\n\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'scrollbar-x',\r\n  template: `\r\n    <div #sticky class=\"ng-scrollbar-sticky\">\r\n      <div scrollbarTrackX class=\"ng-scrollbar-track {{ cmp.trackClass }}\">\r\n        <div scrollbarThumbX class=\"ng-scrollbar-thumb {{ cmp.thumbClass }}\"\r\n             [attr.dir]=\"cmp.direction()\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./shared.scss', './horizontal.scss'],\r\n  imports: [TrackXDirective, ThumbXDirective],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScrollbarX extends ScrollbarAdapter {\r\n\r\n  @ViewChild(TrackXDirective, { static: true }) override readonly track: TrackXDirective;\r\n  @ViewChild(ThumbXDirective, { static: true }) override readonly thumb: ThumbXDirective;\r\n\r\n}\r\n","import { Component, inject, ChangeDetectionStrategy, ViewChild } from '@angular/core';\r\nimport { ScrollbarX, ScrollbarY } from '../scrollbar/scrollbar';\r\nimport { NG_SCROLLBAR, _NgScrollbar } from '../utils/scrollbar-base';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'scrollbars',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [ScrollbarX, ScrollbarY],\r\n  template: `\r\n    @if (cmp.verticalUsed()) {\r\n      <scrollbar-y/>\r\n    }\r\n    @if (cmp.horizontalUsed()) {\r\n      <scrollbar-x/>\r\n    }\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display: contents;\r\n    }\r\n  `]\r\n})\r\nexport class Scrollbars {\r\n  // Scrollbars references used for testing purposes\r\n  @ViewChild(ScrollbarY) y: ScrollbarY;\r\n  @ViewChild(ScrollbarX) x: ScrollbarX;\r\n\r\n  cmp: _NgScrollbar = inject(NG_SCROLLBAR);\r\n}\r\n","import { Component, ViewChild, OnInit, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ScrollViewport, ViewportAdapter } from './viewport';\r\nimport { NgScrollbarCore } from './ng-scrollbar-core';\r\nimport { NG_SCROLLBAR } from './utils/scrollbar-base';\r\nimport { Scrollbars } from './scrollbars/scrollbars';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'ng-scrollbar:not([externalViewport])',\r\n  exportAs: 'ngScrollbar',\r\n  imports: [Scrollbars],\r\n  hostDirectives: [ScrollViewport],\r\n  template: `\r\n    <div #contentWrapper>\r\n      <ng-content/>\r\n      <scrollbars/>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ng-scrollbar.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    { provide: NG_SCROLLBAR, useExisting: NgScrollbar }\r\n  ]\r\n})\r\nexport class NgScrollbar extends NgScrollbarCore implements OnInit {\r\n\r\n  readonly viewport: ViewportAdapter = new ViewportAdapter(this.nativeElement);\r\n\r\n  @ViewChild('contentWrapper', { static: true }) contentWrapper: ElementRef<HTMLElement>;\r\n\r\n  @ViewChild(Scrollbars, { static: true }) scrollbars: Scrollbars;\r\n\r\n  override ngOnInit(): void {\r\n    this.viewport.init(this.contentWrapper.nativeElement);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ContentChild,\r\n  inject,\r\n  OnInit,\r\n  Injector,\r\n  ComponentRef,\r\n  ApplicationRef,\r\n  ChangeDetectionStrategy,\r\n  ComponentFactoryResolver\r\n} from '@angular/core';\r\nimport { ScrollViewport, ViewportAdapter } from './viewport';\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { NgScrollbarCore } from './ng-scrollbar-core';\r\nimport { NG_SCROLLBAR } from './utils/scrollbar-base';\r\nimport { Scrollbars } from './scrollbars/scrollbars';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'ng-scrollbar[externalViewport]',\r\n  exportAs: 'ngScrollbar',\r\n  template: '<ng-content/>',\r\n  styleUrls: ['ng-scrollbar.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.ng-scrollbar-external-viewport]': 'true'\r\n  },\r\n  providers: [\r\n    { provide: NG_SCROLLBAR, useExisting: NgScrollbarExt },\r\n    { provide: NgScrollbarCore, useExisting: NgScrollbar }\r\n  ],\r\n})\r\nexport class NgScrollbarExt extends NgScrollbarCore implements OnInit {\r\n\r\n  private readonly appRef: ApplicationRef = inject(ApplicationRef);\r\n\r\n  private readonly cfr: ComponentFactoryResolver = inject(ComponentFactoryResolver);\r\n\r\n  private viewportAdapter: ViewportAdapter;\r\n\r\n  private scrollbarWrapperRef: ComponentRef<Scrollbars>;\r\n\r\n  get viewport(): ViewportAdapter {\r\n    return this.viewportAdapter;\r\n  }\r\n\r\n  get scrollbars(): Scrollbars {\r\n    return this.scrollbarWrapperRef?.instance;\r\n  }\r\n\r\n  /**\r\n   * The selector used to query the viewport element\r\n   */\r\n  @Input() externalViewport: string;\r\n\r\n  /**\r\n   * The selector used to query the content wrapper element\r\n   */\r\n  @Input() externalContentWrapper: string;\r\n\r\n  /**\r\n   * The selector used to query the spacer element (virtual scroll integration)\r\n   */\r\n  @Input() externalSpacer: string;\r\n\r\n  /**\r\n   * Reference to the external viewport directive if used\r\n   */\r\n  @ContentChild(ScrollViewport, { static: true }) private customViewport: ScrollViewport;\r\n\r\n  override ngOnInit(): void {\r\n    if (this.customViewport) {\r\n      this.viewportAdapter = this.customViewport.viewport;\r\n    } else {\r\n      let viewportElement: HTMLElement;\r\n      // If viewport selector was defined, query the element\r\n      if (this.externalViewport) {\r\n        viewportElement = this.nativeElement.querySelector(this.externalViewport);\r\n      }\r\n      if (viewportElement) {\r\n        this.viewportAdapter = new ViewportAdapter(viewportElement);\r\n      } else {\r\n        console.error(`[NgScrollbar]: Could not find the viewport element for the provided selector \"${ this.externalViewport }\"`);\r\n      }\r\n    }\r\n\r\n    let spacerElement: HTMLElement;\r\n    if (this.externalSpacer) {\r\n      spacerElement = this.nativeElement.querySelector(this.externalSpacer);\r\n      if (!spacerElement) {\r\n        console.error(`[NgScrollbar]: Could not find the spacer element for the provided selector \"${ this.externalSpacer }\"`);\r\n      }\r\n    }\r\n\r\n    let contentWrapperElement: HTMLElement;\r\n    if (this.externalContentWrapper) {\r\n      contentWrapperElement = this.nativeElement.querySelector(this.externalContentWrapper);\r\n      if (!contentWrapperElement) {\r\n        console.error(`[NgScrollbar]: Could not find the content wrapper element for the provided selector \"${ this.externalContentWrapper }\"`);\r\n      }\r\n    }\r\n\r\n    this.viewport.init(contentWrapperElement, spacerElement);\r\n\r\n    // Create/destroy ScrollbarWrapper component when disabled state changes\r\n    if (!this.scrollbarWrapperRef) {\r\n      const injector: Injector = Injector.create({ providers: [{ provide: NG_SCROLLBAR, useValue: this }] });\r\n      this.scrollbarWrapperRef = this.cfr.resolveComponentFactory(Scrollbars).create(injector);\r\n      // Attach the host view of the component to the main change detection tree, so that its lifecycle hooks will run.\r\n      this.appRef.attachView(this.scrollbarWrapperRef.hostView);\r\n      // Move the created component inside the content wrapper\r\n      this.viewport.contentWrapperElement.appendChild(this.scrollbarWrapperRef.location.nativeElement);\r\n    }\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { ScrollViewport } from './viewport';\r\nimport { NgScrollbarExt } from './ng-scrollbar-ext';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgScrollbar,\r\n    ScrollViewport,\r\n    NgScrollbarExt\r\n  ],\r\n  exports: [\r\n    NgScrollbar,\r\n    ScrollViewport,\r\n    NgScrollbarExt\r\n  ]\r\n})\r\nexport class NgScrollbarModule {\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ScrollViewport"],"mappings":"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"}