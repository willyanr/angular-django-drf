{"version":3,"file":"ngx-scrollbar-utils.mjs","sources":["../../../projects/ngx-scrollbar/utils/src/mat-select-viewport.ts","../../../projects/ngx-scrollbar/utils/src/cdk-virtual-scrollbar.ts","../../../projects/ngx-scrollbar/utils/src/ngx-scrollbar-utils.ts"],"sourcesContent":["import { Directive, effect, inject } from '@angular/core';\r\nimport { MatOption, MatSelect } from '@angular/material/select';\r\nimport { _NgScrollbar, NG_SCROLLBAR } from 'ngx-scrollbar';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'ng-scrollbar[matSelectViewport], ng-scrollbar[mat-select-viewport]'\r\n})\r\nexport class MatSelectViewport {\r\n\r\n  private readonly scrollbar: _NgScrollbar = inject(NG_SCROLLBAR);\r\n\r\n  private readonly matSelect: MatSelect = inject(MatSelect);\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      if (this.scrollbar.isVerticallyScrollable() && this.matSelect.panelOpen) {\r\n        const selected: MatOption | MatOption[] = this.matSelect.selected;\r\n        if (selected) {\r\n          const element: HTMLElement = Array.isArray(selected) ? selected[0]._getHostElement() : selected._getHostElement();\r\n          const height: number = this.scrollbar.nativeElement.clientHeight;\r\n          this.scrollbar.scrollTo({\r\n            top: element.offsetTop + element.offsetHeight - height\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Directive, inject } from '@angular/core';\r\nimport { NgScrollbarExt } from 'ngx-scrollbar';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'ng-scrollbar[cdkVirtualScrollViewport]'\r\n})\r\nexport class NgScrollbarCdkVirtualScroll {\r\n\r\n  private readonly scrollbar: NgScrollbarExt = inject(NgScrollbarExt);\r\n\r\n  constructor() {\r\n    this.scrollbar.externalViewport = '.cdk-virtual-scroll-viewport';\r\n    this.scrollbar.externalSpacer = '.cdk-virtual-scroll-spacer';\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;MAQa,iBAAiB,CAAA;AAM5B,IAAA,WAAA,GAAA;AAJiB,QAAA,IAAA,CAAA,SAAS,GAAiB,MAAM,CAAC,YAAY,CAAC,CAAC;AAE/C,QAAA,IAAA,CAAA,SAAS,GAAc,MAAM,CAAC,SAAS,CAAC,CAAC;QAGxD,MAAM,CAAC,MAAK;AACV,YAAA,IAAI,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;AACvE,gBAAA,MAAM,QAAQ,GAA4B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;AAClE,gBAAA,IAAI,QAAQ,EAAE;oBACZ,MAAM,OAAO,GAAgB,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,GAAG,QAAQ,CAAC,eAAe,EAAE,CAAC;oBAClH,MAAM,MAAM,GAAW,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;AACjE,oBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;wBACtB,GAAG,EAAE,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,GAAG,MAAM;AACvD,qBAAA,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;8GAnBU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAjB,iBAAiB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oEAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,oEAAoE;AAC/E,iBAAA,CAAA;;;MCAY,2BAA2B,CAAA;AAItC,IAAA,WAAA,GAAA;AAFiB,QAAA,IAAA,CAAA,SAAS,GAAmB,MAAM,CAAC,cAAc,CAAC,CAAC;AAGlE,QAAA,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,8BAA8B,CAAC;AACjE,QAAA,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,4BAA4B,CAAC;KAC9D;8GAPU,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAA3B,2BAA2B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,wCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAA3B,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAJvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,wCAAwC;AACnD,iBAAA,CAAA;;;ACND;;AAEG;;;;"}