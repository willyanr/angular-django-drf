{"version":3,"file":"ngx-scrollbar-smooth-scroll.mjs","sources":["../../../projects/ngx-scrollbar/smooth-scroll/src/bezier-easing.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/smooth-scroll.model.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/smooth-scroll-manager.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/smooth-scroll.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/ngx-scrollbar-smooth-scroll.ts"],"sourcesContent":["/**\r\n * https://github.com/gre/bezier-easing\r\n * BezierEasing - use bezier curve for transition easing function\r\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n */\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\nconst NEWTON_ITERATIONS = 4;\r\nconst NEWTON_MIN_SLOPE = 0.001;\r\nconst SUBDIVISION_PRECISION = 0.0000001;\r\nconst SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\nconst kSplineTableSize = 11;\r\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\nconst float32ArraySupported = typeof Float32Array === 'function';\r\n\r\nfunction A(aA1: number, aA2: number) {\r\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\r\n}\r\n\r\nfunction B(aA1: number, aA2: number) {\r\n  return 3.0 * aA2 - 6.0 * aA1;\r\n}\r\n\r\nfunction C(aA1: number) {\r\n  return 3.0 * aA1;\r\n}\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nfunction calcBezier(aT: number, aA1: number, aA2: number) {\r\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\r\n}\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\nfunction getSlope(aT: number, aA1: number, aA2: number) {\r\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n}\r\n\r\nfunction binarySubdivide(aX: number, aA: number, aB: number, mX1: number, mX2: number) {\r\n  let currentX, currentT, i = 0;\r\n  do {\r\n    currentT = aA + (aB - aA) / 2.0;\r\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n    if (currentX > 0.0) {\r\n      aB = currentT;\r\n    } else {\r\n      aA = currentT;\r\n    }\r\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n  return currentT;\r\n}\r\n\r\nfunction newtonRaphsonIterate(aX: number, aGuessT: number, mX1: number, mX2: number) {\r\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n    let currentSlope = getSlope(aGuessT, mX1, mX2);\r\n    if (currentSlope === 0.0) {\r\n      return aGuessT;\r\n    }\r\n    let currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n    aGuessT -= currentX / currentSlope;\r\n  }\r\n  return aGuessT;\r\n}\r\n\r\nfunction LinearEasing(x: number) {\r\n  return x;\r\n}\r\n\r\nexport default function bezier(mX1: number, mY1: number, mX2: number, mY2: number) {\r\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\r\n    throw new Error('bezier x values must be in [0, 1] range');\r\n  }\r\n\r\n  if (mX1 === mY1 && mX2 === mY2) {\r\n    return LinearEasing;\r\n  }\r\n\r\n  // Precompute samples table\r\n  let sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n  for (let i = 0; i < kSplineTableSize; ++i) {\r\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n  }\r\n\r\n  function getTForX(aX: number) {\r\n    let intervalStart = 0.0;\r\n    let currentSample = 1;\r\n    let lastSample = kSplineTableSize - 1;\r\n\r\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\r\n      intervalStart += kSampleStepSize;\r\n    }\r\n    --currentSample;\r\n\r\n    // Interpolate to provide an initial guess for t\r\n    let dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\r\n    let guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n    let initialSlope = getSlope(guessForT, mX1, mX2);\r\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n    } else if (initialSlope === 0.0) {\r\n      return guessForT;\r\n    } else {\r\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n    }\r\n  }\r\n\r\n  return function BezierEasing(x: number) {\r\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n    if (x === 0) {\r\n      return 0;\r\n    }\r\n    if (x === 1) {\r\n      return 1;\r\n    }\r\n    return calcBezier(getTForX(x), mY1, mY2);\r\n  };\r\n};\r\n","import { ElementRef, InjectionToken } from '@angular/core';\r\nimport { _Left, _Top, _XAxis, _YAxis } from '@angular/cdk/scrolling';\r\n\r\nexport const SMOOTH_SCROLL_OPTIONS = new InjectionToken<SmoothScrollOptions>('SMOOTH_SCROLL_OPTIONS');\r\n\r\nexport type SmoothScrollElement = HTMLElement | ElementRef<HTMLElement> | string;\r\n\r\nexport type SmoothScrollToOptions = _XAxis & _YAxis & SmoothScrollOptions;\r\n\r\nexport type SmoothScrollToElementOptions = _Top & _Left & SmoothScrollOptions;\r\n\r\nexport interface SmoothScrollOptions {\r\n  duration?: number;\r\n  easing?: BezierEasingOptions;\r\n}\r\n\r\nexport interface SmoothScrollStep {\r\n  scrollable: HTMLElement;\r\n  startTime: number;\r\n  startX: number;\r\n  startY: number;\r\n  x: number;\r\n  y: number;\r\n  duration: number;\r\n  easing: (k: number) => number;\r\n  currentX?: number;\r\n  currentY?: number;\r\n}\r\n\r\nexport interface BezierEasingOptions {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n","import { ElementRef, Inject, Injectable, PLATFORM_ID, Optional } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { coerceElement } from '@angular/cdk/coercion';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { _Bottom, _Left, _Right, _Top, _Without } from '@angular/cdk/scrolling';\r\nimport { Observable, Subject, Subscriber, animationFrameScheduler, fromEvent, merge, of, expand, finalize, take, takeUntil, takeWhile } from 'rxjs';\r\nimport BezierEasing from './bezier-easing';\r\nimport {\r\n  SMOOTH_SCROLL_OPTIONS,\r\n  SmoothScrollElement,\r\n  SmoothScrollStep,\r\n  SmoothScrollToElementOptions,\r\n  SmoothScrollToOptions\r\n} from './smooth-scroll.model';\r\n\r\n// @dynamic\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmoothScrollManager {\r\n\r\n  // Default options\r\n  private readonly _defaultOptions: SmoothScrollToOptions;\r\n\r\n  // Keeps track of the ongoing SmoothScroll functions, so they can be handled in case of duplication.\r\n  // Each scrolled element gets a destroyer stream which gets deleted immediately after it completes.\r\n  // Purpose: If user called a scroll function again on the same element before the scrolls completes,\r\n  // it cancels the ongoing scroll and starts a new one\r\n  private _onGoingScrolls: Map<HTMLElement, Subject<void>> = new Map<HTMLElement, Subject<void>>();\r\n\r\n  private get _w(): Window {\r\n    return this._document.defaultView;\r\n  }\r\n\r\n  /**\r\n   * Timing method\r\n   */\r\n  private get _now(): () => number {\r\n    return this._w.performance?.now?.bind(this._w.performance) || Date.now;\r\n  }\r\n\r\n  constructor(@Inject(DOCUMENT) private _document: Document,\r\n              @Inject(PLATFORM_ID) private _platform: object,\r\n              @Optional() @Inject(SMOOTH_SCROLL_OPTIONS) customDefaultOptions: SmoothScrollToOptions) {\r\n    this._defaultOptions = {\r\n      duration: 468,\r\n      easing: {\r\n        x1: 0.42,\r\n        y1: 0,\r\n        x2: 0.58,\r\n        y2: 1\r\n      },\r\n      ...customDefaultOptions,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * changes scroll position inside an element\r\n   */\r\n  private _scrollElement(el: HTMLElement, x: number, y: number): void {\r\n    el.scrollLeft = x;\r\n    el.scrollTop = y;\r\n  }\r\n\r\n  /**\r\n   * Handles a given parameter of type HTMLElement, ElementRef or selector\r\n   */\r\n  private _getElement(el: HTMLElement | ElementRef | string, parent?: HTMLElement): HTMLElement {\r\n    if (typeof el === 'string') {\r\n      return (parent || this._document).querySelector(el);\r\n    }\r\n    return coerceElement<HTMLElement>(el);\r\n  }\r\n\r\n  /**\r\n   * Initializes a destroyer stream, re-initializes it if the element is already being scrolled\r\n   */\r\n  private _initSmoothScroll(el: HTMLElement): Subject<void> {\r\n    if (this._onGoingScrolls.has(el)) {\r\n      this._onGoingScrolls.get(el)!.next();\r\n    }\r\n    return this._onGoingScrolls.set(el, new Subject<void>())!.get(el)!;\r\n  }\r\n\r\n  /**\r\n   * Checks if smooth scroll has reached, cleans up the smooth scroll stream and resolves its promise\r\n   */\r\n  private _isFinished(context: SmoothScrollStep, destroyed: Subject<void>, resolve: () => void): boolean {\r\n    if (context.currentX !== context.x || context.currentY !== context.y) {\r\n      return true;\r\n    }\r\n    destroyed.next();\r\n    resolve();\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Terminates an ongoing smooth scroll\r\n   */\r\n  private _interrupted(el: HTMLElement, destroyed: Subject<void>): Observable<Event | void> {\r\n    return merge(\r\n      fromEvent(el, 'wheel', { passive: true, capture: true }),\r\n      fromEvent(el, 'touchmove', { passive: true, capture: true }),\r\n      destroyed\r\n    ).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Deletes the destroyer function, runs if the smooth scroll has finished or interrupted\r\n   */\r\n  private _destroy(el: HTMLElement, destroyed: Subject<void>): void {\r\n    destroyed.complete();\r\n    this._onGoingScrolls.delete(el);\r\n  }\r\n\r\n  /**\r\n   * A function called recursively that, given a context, steps through scrolling\r\n   */\r\n  private _step(context: SmoothScrollStep): Observable<SmoothScrollStep> {\r\n    return new Observable((subscriber: Subscriber<SmoothScrollStep>) => {\r\n      let elapsed = (this._now() - context.startTime) / context.duration;\r\n\r\n      // avoid elapsed times higher than one\r\n      elapsed = elapsed > 1 ? 1 : elapsed;\r\n\r\n      // apply easing to elapsed time\r\n      const value: number = context.easing(elapsed);\r\n\r\n      context.currentX = context.startX + (context.x - context.startX) * value;\r\n      context.currentY = context.startY + (context.y - context.startY) * value;\r\n\r\n      this._scrollElement(context.scrollable, context.currentX, context.currentY);\r\n      // Proceed to the step\r\n      animationFrameScheduler.schedule(() => subscriber.next(context));\r\n    });\r\n  }\r\n\r\n  private _applyScrollToOptions(el: HTMLElement, options: SmoothScrollToOptions): Promise<void> {\r\n    if (!options.duration!) {\r\n      this._scrollElement(el, options!.left!, options!.top!);\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // Initialize a destroyer stream, reinitialize it if the element is already being scrolled\r\n    const destroyed: Subject<void> = this._initSmoothScroll(el);\r\n\r\n    const context: SmoothScrollStep = {\r\n      scrollable: el,\r\n      startTime: this._now(),\r\n      startX: el.scrollLeft,\r\n      startY: el.scrollTop,\r\n      x: options.left == null ? el.scrollLeft : ~~options.left,\r\n      y: options.top == null ? el.scrollTop : ~~options.top,\r\n      duration: options.duration!,\r\n      easing: BezierEasing(options.easing!.x1!, options.easing!.y1!, options.easing!.x2!, options.easing!.y2!)\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      // Scroll each step recursively\r\n      of(null).pipe(\r\n        expand(() => this._step(context).pipe(\r\n          takeWhile((currContext: SmoothScrollStep) => this._isFinished(currContext, destroyed, resolve))\r\n        )),\r\n        takeUntil(this._interrupted(el, destroyed)),\r\n        finalize(() => this._destroy(el, destroyed))\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\r\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\r\n   * left and right always refer to the left and right side of the scrolling container irrespective\r\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\r\n   * in an RTL context.\r\n   * @param scrollable element\r\n   * @param customOptions specified the offsets to scroll to.\r\n   */\r\n  scrollTo(scrollable: SmoothScrollElement, customOptions: SmoothScrollToOptions): Promise<void> {\r\n    if (isPlatformBrowser(this._platform)) {\r\n      const el = this._getElement(scrollable);\r\n      const isRtl = getComputedStyle(el).direction === 'rtl';\r\n      const rtlScrollAxisType = getRtlScrollAxisType();\r\n\r\n      const options: SmoothScrollToOptions = {\r\n        ...(this._defaultOptions as _Without<_Bottom & _Top>),\r\n        ...customOptions,\r\n        ...({\r\n          // Rewrite start & end offsets as right or left offsets.\r\n          left: customOptions.left == null ? (isRtl ? customOptions.end : customOptions.start) : customOptions.left,\r\n          right: customOptions.right == null ? (isRtl ? customOptions.start : customOptions.end) : customOptions.right\r\n        } as _Without<_Bottom & _Top>)\r\n      };\r\n\r\n      // Rewrite the bottom offset as a top offset.\r\n      if (options.bottom != null) {\r\n        (options as _Without<_Bottom> & _Top).top = el.scrollHeight - el.clientHeight - options.bottom;\r\n      }\r\n\r\n      // Rewrite the right offset as a left offset.\r\n      if (isRtl && rtlScrollAxisType !== RtlScrollAxisType.NORMAL) {\r\n        if (options.left != null) {\r\n          (options as _Without<_Left> & _Right).right = el.scrollWidth - el.clientWidth - options.left;\r\n        }\r\n\r\n        if (rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n          options.left = options.right;\r\n        } else if (rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n          options.left = options.right ? -options.right : options.right;\r\n        }\r\n      } else {\r\n        if (options.right != null) {\r\n          (options as _Without<_Right> & _Left).left = el.scrollWidth - el.clientWidth - options.right;\r\n        }\r\n      }\r\n      return this._applyScrollToOptions(el, options);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(scrollable: SmoothScrollElement, target: SmoothScrollElement, customOptions: SmoothScrollToElementOptions = {}): Promise<void> {\r\n    const scrollableEl = this._getElement(scrollable);\r\n    const targetEl = this._getElement(target, scrollableEl);\r\n    const options: SmoothScrollToOptions = {\r\n      ...customOptions,\r\n      ...{\r\n        left: targetEl.offsetLeft + (customOptions.left || 0),\r\n        top: targetEl.offsetTop + (customOptions.top || 0)\r\n      }\r\n    };\r\n    return targetEl ? this.scrollTo(scrollableEl, options) : Promise.resolve();\r\n  }\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { SmoothScrollManager } from './smooth-scroll-manager';\r\nimport { SmoothScrollElement, SmoothScrollToElementOptions, SmoothScrollToOptions } from './smooth-scroll.model';\r\n\r\n@Directive({\r\n  selector: '[smoothScroll], [smooth-scroll]',\r\n  exportAs: 'smoothScroll',\r\n  standalone: true\r\n})\r\nexport class SmoothScroll {\r\n\r\n  constructor(private element: ElementRef, private smoothScroll: SmoothScrollManager) {\r\n  }\r\n\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> | undefined {\r\n    return this.smoothScroll.scrollTo(this.element, options);\r\n  }\r\n\r\n  scrollToElement(target: SmoothScrollElement, options: SmoothScrollToElementOptions): Promise<void> | undefined {\r\n    return this.smoothScroll.scrollToElement(this.element, target, options);\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["BezierEasing","i1.SmoothScrollManager"],"mappings":"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"}