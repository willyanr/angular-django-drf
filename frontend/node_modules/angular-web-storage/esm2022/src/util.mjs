/**
 * 判断是否在浏览器中渲染Angular应用
 * `decorator` 无法直接使用Angular `PLATFORM_ID` 标识
 * 这带来的好处是当服务端自行填充 Document 时也能很好的识别
 */
export const isBrowser = typeof document === 'object' && !!document;
export class StorageUtil {
    static get(storage, key) {
        if (storage == null) {
            return null;
        }
        const value = StorageUtil.parse(storage.getItem(key) || 'null') || null;
        if (value === null) {
            return null;
        }
        if (typeof value === 'object' && typeof value._expired !== 'undefined' && value._expired !== 0 && +new Date() > value._expired) {
            StorageUtil.remove(storage, key);
            return null;
        }
        return value._value || null;
    }
    static set(storage, key, value, expiredAt = 0, expiredUnit = 't') {
        if (storage == null) {
            return;
        }
        storage.setItem(key, StorageUtil.stringify({
            _expired: StorageUtil.getExpired(expiredAt, expiredUnit),
            _value: value,
        }));
    }
    static remove(storage, key) {
        if (storage == null) {
            return;
        }
        storage.removeItem(key);
    }
    static key(storage, index) {
        if (storage == null) {
            return null;
        }
        return storage.key(index);
    }
    static getExpired(val, unit) {
        if (val <= 0) {
            return 0;
        }
        const now = +new Date();
        switch (unit) {
            case 's': // 秒
                return now + 1000 * val;
            case 'm': // 分
                return now + 1000 * 60 * val;
            case 'h': // 时
                return now + 1000 * 60 * 60 * val;
            case 'd': // 天
                return now + 1000 * 60 * 60 * 24 * val;
            case 'w': // 周
                return now + 1000 * 60 * 60 * 24 * 7 * val;
            case 'y': // 年
                return now + 1000 * 60 * 60 * 24 * 365 * val;
            case 't': // 自定义
                return now + val;
            default:
                return 0;
        }
    }
    static stringify(value) {
        return JSON.stringify(value);
    }
    static parse(text) {
        try {
            return JSON.parse(text) || null;
        }
        catch (e) {
            return text;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9zcmMvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFZQTs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLE9BQU8sUUFBUSxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDO0FBRXBFLE1BQU0sT0FBTyxXQUFXO0lBQ3RCLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBdUIsRUFBRSxHQUFXO1FBQzdDLElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtZQUNuQixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsTUFBTSxLQUFLLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQztRQUN4RSxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7WUFDbEIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsS0FBSyxXQUFXLElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRSxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDOUgsV0FBVyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDakMsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELE9BQU8sS0FBSyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUM7SUFDOUIsQ0FBQztJQUVELE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBdUIsRUFBRSxHQUFXLEVBQUUsS0FBVSxFQUFFLFlBQW9CLENBQUMsRUFBRSxjQUEyQixHQUFHO1FBQ2hILElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtZQUNuQixPQUFPO1NBQ1I7UUFDRCxPQUFPLENBQUMsT0FBTyxDQUNiLEdBQUcsRUFDSCxXQUFXLENBQUMsU0FBUyxDQUFDO1lBQ3BCLFFBQVEsRUFBRSxXQUFXLENBQUMsVUFBVSxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUM7WUFDeEQsTUFBTSxFQUFFLEtBQUs7U0FDZCxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQXVCLEVBQUUsR0FBVztRQUNoRCxJQUFJLE9BQU8sSUFBSSxJQUFJLEVBQUU7WUFDbkIsT0FBTztTQUNSO1FBQ0QsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUF1QixFQUFFLEtBQWE7UUFDL0MsSUFBSSxPQUFPLElBQUksSUFBSSxFQUFFO1lBQ25CLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVPLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBVyxFQUFFLElBQWlCO1FBQ3RELElBQUksR0FBRyxJQUFJLENBQUMsRUFBRTtZQUNaLE9BQU8sQ0FBQyxDQUFDO1NBQ1Y7UUFDRCxNQUFNLEdBQUcsR0FBRyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7UUFDeEIsUUFBUSxJQUFJLEVBQUU7WUFDWixLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7WUFDMUIsS0FBSyxHQUFHLEVBQUUsSUFBSTtnQkFDWixPQUFPLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUMvQixLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUNwQyxLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQUM7WUFDekMsS0FBSyxHQUFHLEVBQUUsSUFBSTtnQkFDWixPQUFPLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztZQUM3QyxLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDO1lBQy9DLEtBQUssR0FBRyxFQUFFLE1BQU07Z0JBQ2QsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDO1lBQ25CO2dCQUNFLE9BQU8sQ0FBQyxDQUFDO1NBQ1o7SUFDSCxDQUFDO0lBRU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFVO1FBQ2pDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFZO1FBQy9CLElBQUk7WUFDRixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDO1NBQ2pDO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixPQUFPLElBQUksQ0FBQztTQUNiO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHBpcmF0aW9uIHRpbWUgdW5pdFxuICogczogc2Vjb25kc1xuICogbTogbWludXRlXG4gKiBoOiBob3VyXG4gKiBkOiBkYXlcbiAqIHc6IHdlZWtcbiAqIHk6IHllYXJcbiAqIHQ6IEN1c3RvbSAobWlsbGlzZWNvbmQpXG4gKi9cbmV4cG9ydCB0eXBlIEV4cGlyZWRVbml0ID0gJ3MnIHwgJ20nIHwgJ2gnIHwgJ2QnIHwgJ3cnIHwgJ3knIHwgJ3QnO1xuXG4vKipcbiAqIOWIpOaWreaYr+WQpuWcqOa1j+iniOWZqOS4rea4suafk0FuZ3VsYXLlupTnlKhcbiAqIGBkZWNvcmF0b3JgIOaXoOazleebtOaOpeS9v+eUqEFuZ3VsYXIgYFBMQVRGT1JNX0lEYCDmoIfor4ZcbiAqIOi/meW4puadpeeahOWlveWkhOaYr+W9k+acjeWKoeerr+iHquihjOWhq+WFhSBEb2N1bWVudCDml7bkuZ/og73lvojlpb3nmoTor4bliKtcbiAqL1xuZXhwb3J0IGNvbnN0IGlzQnJvd3NlciA9IHR5cGVvZiBkb2N1bWVudCA9PT0gJ29iamVjdCcgJiYgISFkb2N1bWVudDtcblxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VVdGlsIHtcbiAgc3RhdGljIGdldChzdG9yYWdlOiBTdG9yYWdlIHwgbnVsbCwga2V5OiBzdHJpbmcpOiBhbnkge1xuICAgIGlmIChzdG9yYWdlID09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCB2YWx1ZSA9IFN0b3JhZ2VVdGlsLnBhcnNlKHN0b3JhZ2UuZ2V0SXRlbShrZXkpIHx8ICdudWxsJykgfHwgbnVsbDtcbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdmFsdWUuX2V4cGlyZWQgIT09ICd1bmRlZmluZWQnICYmIHZhbHVlLl9leHBpcmVkICE9PSAwICYmICtuZXcgRGF0ZSgpID4gdmFsdWUuX2V4cGlyZWQpIHtcbiAgICAgIFN0b3JhZ2VVdGlsLnJlbW92ZShzdG9yYWdlLCBrZXkpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlLl92YWx1ZSB8fCBudWxsO1xuICB9XG5cbiAgc3RhdGljIHNldChzdG9yYWdlOiBTdG9yYWdlIHwgbnVsbCwga2V5OiBzdHJpbmcsIHZhbHVlOiBhbnksIGV4cGlyZWRBdDogbnVtYmVyID0gMCwgZXhwaXJlZFVuaXQ6IEV4cGlyZWRVbml0ID0gJ3QnKTogdm9pZCB7XG4gICAgaWYgKHN0b3JhZ2UgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzdG9yYWdlLnNldEl0ZW0oXG4gICAgICBrZXksXG4gICAgICBTdG9yYWdlVXRpbC5zdHJpbmdpZnkoe1xuICAgICAgICBfZXhwaXJlZDogU3RvcmFnZVV0aWwuZ2V0RXhwaXJlZChleHBpcmVkQXQsIGV4cGlyZWRVbml0KSxcbiAgICAgICAgX3ZhbHVlOiB2YWx1ZSxcbiAgICAgIH0pLFxuICAgICk7XG4gIH1cblxuICBzdGF0aWMgcmVtb3ZlKHN0b3JhZ2U6IFN0b3JhZ2UgfCBudWxsLCBrZXk6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmIChzdG9yYWdlID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gIH1cblxuICBzdGF0aWMga2V5KHN0b3JhZ2U6IFN0b3JhZ2UgfCBudWxsLCBpbmRleDogbnVtYmVyKTogc3RyaW5nIHwgbnVsbCB7XG4gICAgaWYgKHN0b3JhZ2UgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBzdG9yYWdlLmtleShpbmRleCk7XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyBnZXRFeHBpcmVkKHZhbDogbnVtYmVyLCB1bml0OiBFeHBpcmVkVW5pdCk6IG51bWJlciB7XG4gICAgaWYgKHZhbCA8PSAwKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgY29uc3Qgbm93ID0gK25ldyBEYXRlKCk7XG4gICAgc3dpdGNoICh1bml0KSB7XG4gICAgICBjYXNlICdzJzogLy8g56eSXG4gICAgICAgIHJldHVybiBub3cgKyAxMDAwICogdmFsO1xuICAgICAgY2FzZSAnbSc6IC8vIOWIhlxuICAgICAgICByZXR1cm4gbm93ICsgMTAwMCAqIDYwICogdmFsO1xuICAgICAgY2FzZSAnaCc6IC8vIOaXtlxuICAgICAgICByZXR1cm4gbm93ICsgMTAwMCAqIDYwICogNjAgKiB2YWw7XG4gICAgICBjYXNlICdkJzogLy8g5aSpXG4gICAgICAgIHJldHVybiBub3cgKyAxMDAwICogNjAgKiA2MCAqIDI0ICogdmFsO1xuICAgICAgY2FzZSAndyc6IC8vIOWRqFxuICAgICAgICByZXR1cm4gbm93ICsgMTAwMCAqIDYwICogNjAgKiAyNCAqIDcgKiB2YWw7XG4gICAgICBjYXNlICd5JzogLy8g5bm0XG4gICAgICAgIHJldHVybiBub3cgKyAxMDAwICogNjAgKiA2MCAqIDI0ICogMzY1ICogdmFsO1xuICAgICAgY2FzZSAndCc6IC8vIOiHquWumuS5iVxuICAgICAgICByZXR1cm4gbm93ICsgdmFsO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgc3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyBwYXJzZSh0ZXh0OiBzdHJpbmcpOiBhbnkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZSh0ZXh0KSB8fCBudWxsO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiB0ZXh0O1xuICAgIH1cbiAgfVxufVxuIl19